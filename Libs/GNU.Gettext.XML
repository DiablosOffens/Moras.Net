<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GNU.Gettext</name>
    </assembly>
    <members>
        <member name="T:GNU.Gettext.PluralFormsCalculator">
            <summary>
            Plural forms calculator.
            </summary>
        </member>
        <member name="M:GNU.Gettext.PluralFormsCalculator.Evaluate(System.Int64,System.Boolean)">
            <summary>
            Evaluate the specified number, returns msgstr index.
            </summary>
            <param name='n'>
            Number to evaluate
            </param>
            <param name='traceToFile'>
            Debug purposes only. Trace to file an evaluation tree.
            </param>
        </member>
        <member name="M:GNU.Gettext.PluralFormsCalculator.Make(System.String)">
            <summary>
            Make the specified str.
            Creates evaluator object. Returns null if failed to parse.
            </summary>
            <param name='str'>
            Text after "Plural-Forms:" (e.g. "nplurals=2; plural=(n != 1);").
            </param>
        </member>
        <member name="M:GNU.Gettext.StringEscaping.UnEscape(GNU.Gettext.StringEscaping.EscapeMode,System.String)">
            <summary>
            Replace escape sequences strings by sequences.
            I.e. "\\n" -&gt; "\n", "\\"" -&gt; "\"" etc.
            </summary>
            <returns>
            Unescaped string
            </returns>
            <param name="mode">
            Unescaping mode
            </param>
            <param name="text">
            Text to process.
            </param>
            <exception cref="T:System.Exception">
            Throw an error if escaping mode is not supported.
            </exception>
        </member>
        <member name="T:GNU.Gettext.LoadParser">
            <summary>
            Load parser.
            </summary>
        </member>
        <member name="M:GNU.Gettext.Catalog.#ctor">
            <summary>
            Creates empty catalog
            </summary>
        </member>
        <member name="M:GNU.Gettext.Catalog.Load(System.String)">
            <summary>
            Loads catalog from .po file.
            </summary>
        </member>
        <member name="P:GNU.Gettext.Catalog.Count">
            <value>
            The number of strings/translations in the catalog.
            </value>
        </member>
        <member name="P:GNU.Gettext.Catalog.Item(System.Int32)">
            <value>
            Gets n-th item in the catalog (read-write access).
            </value>
        </member>
        <member name="P:GNU.Gettext.Catalog.PluralFormsCount">
            <value>
            Returns plural forms count: taken from Plural-Forms header if present, 0 otherwise
            </value>
        </member>
        <member name="T:GNU.Gettext.GettextResourceManager">
            <summary>
            Each instance of this class can be used to lookup translations for a
            given resource name. For each <c>CultureInfo</c>, it performs the lookup
            in several assemblies, from most specific over territory-neutral to
            language-neutral.
            </summary>
        </member>
        <member name="M:GNU.Gettext.GettextResourceManager.#ctor">
            <summary>
            Default constructor use assembly name + ".Messages" as base name to locate satellite assemblies.
            </summary>
        </member>
        <member name="M:GNU.Gettext.GettextResourceManager.#ctor(System.Reflection.Assembly)">
            <summary>
            Same as default constructor but can be called from assembly other than calling one.
            </summary>
            <param name='assembly'>
            Assembly for locate satellites.
            </param>
        </member>
        <member name="M:GNU.Gettext.GettextResourceManager.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="baseName">the resource name, also the assembly base
                                   name</param>
        </member>
        <member name="M:GNU.Gettext.GettextResourceManager.#ctor(System.String,System.Reflection.Assembly)">
            <summary>
            Constructor.
            </summary>
            <param name="baseName">the resource name, also the assembly base
                                   name</param>
        </member>
        <member name="M:GNU.Gettext.GettextResourceManager.GetSatelliteAssemblyName(System.String)">
            <summary>
            Returns file name for satellite assembly.
            Used for compiling by Msgfmt.NET and loading by this resource manager
            </summary>
            <returns>
            The satellite assembly file name.
            </returns>
            <param name='resourceName'>
            Resource base name, i.e. "Solution1.App2.Module3".
            </param>
        </member>
        <member name="M:GNU.Gettext.GettextResourceManager.GetSatelliteAssembly(System.Reflection.Assembly,System.String,System.Globalization.CultureInfo)">
            <summary>
            Loads and returns a satellite assembly for a given culture..
            </summary>
        </member>
        <member name="M:GNU.Gettext.GettextResourceManager.ConstructClassName(System.String)">
            <summary>
            Converts a resource name to a class name.
            </summary>
            <returns>a nonempty string consisting of alphanumerics and underscores
                     and starting with a letter or underscore</returns>
        </member>
        <member name="M:GNU.Gettext.GettextResourceManager.InstantiateResourceSet(System.Reflection.Assembly,System.String,System.Globalization.CultureInfo)">
            <summary>
            Instantiates a resource set for a given culture.
            </summary>
            <exception cref="T:System.ArgumentException">
              The expected type name is not valid.
            </exception>
            <exception cref="T:System.Reflection.ReflectionTypeLoadException">
              satelliteAssembly does not contain the expected type.
            </exception>
            <exception cref="T:System.NullReferenceException">
              The type has no no-arguments constructor.
            </exception>
        </member>
        <member name="M:GNU.Gettext.GettextResourceManager.MakeResourceSetClassName(System.String,System.Globalization.CultureInfo)">
            <summary>
            Create class name for ResourceSet subclass used in resources satellite assembly
            </summary>
            <param name="resourceName"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:GNU.Gettext.GettextResourceManager.GetResourceSetsFor(System.Globalization.CultureInfo)">
            <summary>
            Returns the array of <c>GettextResourceSet</c>s for a given culture,
            loading them if necessary, and maintaining the cache.
            </summary>
        </member>
        <member name="M:GNU.Gettext.GettextResourceManager.GetString(System.String,System.Globalization.CultureInfo)">
            <summary>
            Returns the translation of <paramref name="msgid"/> in a given culture.
            </summary>
            <param name="msgid">the key string to be translated, an ASCII
                                string</param>
            <returns>the translation of <paramref name="msgid"/>, or
                     <paramref name="msgid"/> if none is found</returns>
        </member>
        <member name="M:GNU.Gettext.GettextResourceManager.GetPluralString(System.String,System.String,System.Int64,System.Globalization.CultureInfo)">
            <summary>
            Returns the translation of <paramref name="msgid"/> and
            <paramref name="msgidPlural"/> in a given culture, choosing the right
            plural form depending on the number <paramref name="n"/>.
            </summary>
            <param name="msgid">the key string to be translated, an ASCII
                                string</param>
            <param name="msgidPlural">the English plural of <paramref name="msgid"/>,
                                      an ASCII string</param>
            <param name="n">the number, should be &gt;= 0</param>
            <returns>the translation, or <paramref name="msgid"/> or
                     <paramref name="msgidPlural"/> if none is found</returns>
        </member>
        <member name="M:GNU.Gettext.GettextResourceManager.GetParticularString(System.String,System.String,System.Globalization.CultureInfo)">
            <summary>
            Returns the translation of <paramref name="msgid"/> in the context
            of <paramref name="msgctxt"/> a given culture.
            </summary>
            <param name="msgctxt">the context for the key string, an ASCII
                                  string</param>
            <param name="msgid">the key string to be translated, an ASCII
                                string</param>
            <returns>the translation of <paramref name="msgid"/>, or
                     <paramref name="msgid"/> if none is found</returns>
        </member>
        <member name="M:GNU.Gettext.GettextResourceManager.GetParticularPluralString(System.String,System.String,System.String,System.Int64,System.Globalization.CultureInfo)">
            <summary>
            Returns the translation of <paramref name="msgid"/> and
            <paramref name="msgidPlural"/> in the context of
            <paramref name="msgctxt"/> in a given culture, choosing the right
            plural form depending on the number <paramref name="n"/>.
            </summary>
            <param name="msgctxt">the context for the key string, an ASCII
                                  string</param>
            <param name="msgid">the key string to be translated, an ASCII
                                string</param>
            <param name="msgidPlural">the English plural of <paramref name="msgid"/>,
                                      an ASCII string</param>
            <param name="n">the number, should be &gt;= 0</param>
            <returns>the translation, or <paramref name="msgid"/> or
                     <paramref name="msgidPlural"/> if none is found</returns>
        </member>
        <member name="M:GNU.Gettext.GettextResourceManager.GetString(System.String)">
            <summary>
            Returns the translation of <paramref name="msgid"/> in the current culture.
            </summary>
            <param name="msgid">the key string to be translated</param>
            <returns>the translation of <paramref name="msgid"/>, or
                     <paramref name="msgid"/> if none is found</returns>
        </member>
        <member name="M:GNU.Gettext.GettextResourceManager.GetStringFmt(System.String,System.Object[])">
            <summary>
            Returns the formatted translation of <paramref name="msgid"/> in the current culture.
            </summary>
            <returns>
            Formatted translated or original message
            </returns>
            <param name="msgid">the key string to be translated</param>
            <param name="args">
            Arguments to apply with given format.
            </param>
        </member>
        <member name="M:GNU.Gettext.GettextResourceManager.GetPluralString(System.String,System.String,System.Int64)">
            <summary>
            Returns the translation of <paramref name="msgid"/> and
            <paramref name="msgidPlural"/> in the current culture, choosing the
            right plural form depending on the number <paramref name="n"/>.
            </summary>
            <param name="msgid">the key string to be translated, an ASCII
                                string</param>
            <param name="msgidPlural">the English plural of <paramref name="msgid"/>,
                                      an ASCII string</param>
            <param name="n">the number, should be &gt;= 0</param>
            <returns>the translation, or <paramref name="msgid"/> or
                     <paramref name="msgidPlural"/> if none is found</returns>
        </member>
        <member name="M:GNU.Gettext.GettextResourceManager.GetPluralStringFmt(System.String,System.String,System.Int64)">
            <summary>
            Returns the formatted translation of <paramref name="msgid"/> and
            <paramref name="msgidPlural"/> in the current culture, choosing the
            right plural form depending on the number <paramref name="n"/>.
            </summary>
            <param name="msgid">the key string to be translated, an ASCII
                                string</param>
            <param name="msgidPlural">the English plural of <paramref name="msgid"/>,
                                      an ASCII string</param>
            <param name="n">the number, should be &gt;= 0</param>
            <returns>the translation, or <paramref name="msgid"/> or
                     <paramref name="msgidPlural"/> if none is found</returns>
        </member>
        <member name="M:GNU.Gettext.GettextResourceManager.GetParticularString(System.String,System.String)">
            <summary>
            Returns the translation of <paramref name="msgid"/> in the context
            of <paramref name="msgctxt"/> in the current culture.
            </summary>
            <param name="msgctxt">the context for the key string, an ASCII
                                  string</param>
            <param name="msgid">the key string to be translated, an ASCII
                                string</param>
            <returns>the translation of <paramref name="msgid"/>, or
                     <paramref name="msgid"/> if none is found</returns>
        </member>
        <member name="M:GNU.Gettext.GettextResourceManager.GetParticularPluralString(System.String,System.String,System.String,System.Int64)">
            <summary>
            Returns the translation of <paramref name="msgid"/> and
            <paramref name="msgidPlural"/> in the context of
            <paramref name="msgctxt"/> in the current culture, choosing the
            right plural form depending on the number <paramref name="n"/>.
            </summary>
            <param name="msgctxt">the context for the key string, an ASCII
                                  string</param>
            <param name="msgid">the key string to be translated, an ASCII
                                string</param>
            <param name="msgidPlural">the English plural of <paramref name="msgid"/>,
                                      an ASCII string</param>
            <param name="n">the number, should be &gt;= 0</param>
            <returns>the translation, or <paramref name="msgid"/> or
                     <paramref name="msgidPlural"/> if none is found</returns>
        </member>
        <member name="T:GNU.Gettext.GettextResourceSet">
            <summary>
            <para>
            Each instance of this class encapsulates a single PO file.
            </para>
            <para>
            This API of this class is not meant to be used directly; use
            <c>GettextResourceManager</c> instead.
            </para>
            </summary>
        </member>
        <member name="F:GNU.Gettext.GettextResourceSet.DefaultPluralForms">
            <summary>
            Constant for default plural forms (English/French/Germany).
            </summary>
        </member>
        <member name="M:GNU.Gettext.GettextResourceSet.#ctor">
            <summary>
            Creates a new message catalog. When using this constructor, you
            must override the <c>ReadResources</c> method, in order to initialize
            the <c>Table</c> property. The message catalog will support plural
            forms only if the <c>ReadResources</c> method installs values of type
            <c>String[]</c> and if the <c>PluralEval</c> method is overridden.
            </summary>
        </member>
        <member name="M:GNU.Gettext.GettextResourceSet.#ctor(System.Resources.IResourceReader)">
            <summary>
            Creates a new message catalog, by reading the string/value pairs from
            the given <paramref name="reader"/>. The message catalog will support
            plural forms only if the reader can produce values of type
            <c>String[]</c> and if the <c>PluralEval</c> method is overridden.
            </summary>
        </member>
        <member name="M:GNU.Gettext.GettextResourceSet.#ctor(System.IO.Stream)">
            <summary>
            Creates a new message catalog, by reading the string/value pairs from
            the given <paramref name="stream"/>, which should have the format of
            a <c>.resources</c> file. The message catalog will not support plural
            forms.
            </summary>
        </member>
        <member name="M:GNU.Gettext.GettextResourceSet.#ctor(System.String)">
            <summary>
            Creates a new message catalog, by reading the string/value pairs from
            the file with the given <paramref name="fileName"/>. The file should
            be in the format of a <c>.resources</c> file. The message catalog will
            not support plural forms.
            </summary>
        </member>
        <member name="M:GNU.Gettext.GettextResourceSet.GetString(System.String)">
            <summary>
            Returns the translation of <paramref name="msgid"/>.
            </summary>
            <param name="msgid">the key string to be translated, an ASCII
                                string</param>
            <returns>the translation of <paramref name="msgid"/>, or <c>null</c> if
                     none is found</returns>
        </member>
        <member name="M:GNU.Gettext.GettextResourceSet.GetString(System.String,System.Boolean)">
            <summary>
            Returns the translation of <paramref name="msgid"/>, with possibly
            case-insensitive lookup.
            </summary>
            <param name="msgid">the key string to be translated, an ASCII
                                string</param>
            <returns>the translation of <paramref name="msgid"/>, or <c>null</c> if
                     none is found</returns>
        </member>
        <member name="M:GNU.Gettext.GettextResourceSet.GetPluralString(System.String,System.String,System.Int64)">
            <summary>
            Returns the translation of <paramref name="msgid"/> and
            <paramref name="msgidPlural"/>, choosing the right plural form
            depending on the number <paramref name="n"/>.
            </summary>
            <param name="msgid">the key string to be translated, an ASCII
                                string</param>
            <param name="msgidPlural">the English plural of <paramref name="msgid"/>,
                                      an ASCII string</param>
            <param name="n">the number, should be &gt;= 0</param>
            <returns>the translation, or <c>null</c> if none is found</returns>
        </member>
        <member name="M:GNU.Gettext.GettextResourceSet.PluralEval(System.Int64)">
            <summary>
            Returns the index of the plural form to be chosen for a given number.
            The default implementation is the Englis/Germanic/French plural formula:
            See <see cref="F:GNU.Gettext.GettextResourceSet.DefaultPluralForms"/>
            </summary>
        </member>
        <member name="F:GNU.Gettext.GettextResourceSet.DummyResourceReader">
            <summary>
            A trivial instance of <c>IResourceReader</c> that does nothing.
            </summary>
        </member>
        <member name="P:GNU.Gettext.GettextResourceSet.Keys">
            <summary>
            Returns the keys of this resource set, i.e. the strings for which
            <c>GetObject()</c> can return a non-null value.
            </summary>
        </member>
        <member name="T:GNU.Gettext.DummyIResourceReader">
            <summary>
            A trivial <c>IResourceReader</c> implementation.
            </summary>
        </member>
    </members>
</doc>
